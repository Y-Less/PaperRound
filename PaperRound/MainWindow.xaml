<!--
 * The contents of this file are subject to the Mozilla Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * https://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations
 * under the License.
 * 
 * The Original Code is the "PaperRound" wallpaper tiler.
 * 
 * The Initial Developer of the Original Code is Alex "Y_Less" Cole.
 * All Rights Reserved.
-->

<Window x:Class="MultiWallpaper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        MouseUp="OnMouseUp"
        Title="PaperRound" Height="768" Width="1024" WindowState="Maximized" SizeChanged="OnWindow_SizeChanged">
    <Window.Resources>
        <Style x:Key="ScreenButton" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="White" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="25" />
        </Style>
        <Style x:Key="ZoomInIn" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="PreviewMouseDown" Handler="OnZoomInIn" />
            <EventSetter Event="PreviewMouseUp" Handler="OnMouseUp" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="++" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ZoomIn" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="PreviewMouseDown" Handler="OnZoomIn" />
            <EventSetter Event="PreviewMouseUp" Handler="OnMouseUp" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="+" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ZoomOut" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="PreviewMouseDown" Handler="OnZoomOut" />
            <EventSetter Event="PreviewMouseUp" Handler="OnMouseUp" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="─" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ZoomOutOut" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="PreviewMouseDown" Handler="OnZoomOutOut" />
            <EventSetter Event="PreviewMouseUp" Handler="OnMouseUp" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="─ ─" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SelectFile" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="Click" Handler="OnSelect" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="..." Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SnapLeft" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="Click" Handler="OnSnapLeft" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="←" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SnapTop" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="Click" Handler="OnSnapTop" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="↑" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SnapRight" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="Click" Handler="OnSnapRight" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="→" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SnapBottom" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="Click" Handler="OnSnapBottom" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="↓" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SnapWidth" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="Click" Handler="OnSnapWidth" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="↔" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SnapHeight" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="Click" Handler="OnSnapHeight" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="↕" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Reset" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="Click" Handler="OnClickReset" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="●" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="More" BasedOn="{StaticResource ScreenButton}" TargetType="{x:Type Button}">
            <EventSetter Event="Click" Handler="OnClickMore" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2">
                            <Label Padding="0" Content="▼" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScreenControl" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderThickness" Value="4" />
            <Setter Property="Cursor" Value="ScrollAll" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid ClipToBounds="True">
                            <Image PreviewMouseDown="OnStartDrag" PreviewMouseMove="OnDrag" PreviewMouseUp="OnMouseUp" Margin="{Binding Path=Content.Margin, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" VerticalAlignment="Top" Source="{Binding Path=Content.Src, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=Content.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=Content.Height, RelativeSource={RelativeSource TemplatedParent}}"></Image>
                            <Rectangle Margin="0,0,0,0" Cursor="Arrow" Fill="{x:Null}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"></Rectangle>
                            <Button Style="{StaticResource ZoomInIn}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="10,10,0,0"></Button>
                            <Button Style="{StaticResource ZoomIn}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="10,40,0,0"></Button>
                            <Button Style="{StaticResource ZoomOut}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="10,70,0,0"></Button>
                            <Button Style="{StaticResource ZoomOutOut}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="10,100,0,0"></Button>
                            <Button Style="{StaticResource SelectFile}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="10,130,0,0"></Button>
                            <Button Style="{StaticResource More}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="10,170,0,0"></Button>
                            <Rectangle Cursor="Arrow" Visibility="{Binding Path=Content.ExtrasEnabled, RelativeSource={RelativeSource TemplatedParent}}" Fill="Transparent" Margin="-90,60,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="425" Height="245" MouseEnter="OnMouseOffExtras" />
                            <Rectangle Cursor="Arrow" Visibility="{Binding Path=Content.ExtrasEnabled, RelativeSource={RelativeSource TemplatedParent}}" Fill="Transparent" Margin="0,150,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="245" Height="65" />
                            <Rectangle Cursor="Arrow" Visibility="{Binding Path=Content.ExtrasEnabled, RelativeSource={RelativeSource TemplatedParent}}" Stroke="Black" StrokeThickness="2" Margin="10,160,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Fill="White" Width="225" Height="45" />
                            <Button Visibility="{Binding Path=Content.ExtrasEnabled, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SnapLeft}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="20,170,0,0"></Button>
                            <Button Visibility="{Binding Path=Content.ExtrasEnabled, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SnapTop}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="50,170,0,0"></Button>
                            <Button Visibility="{Binding Path=Content.ExtrasEnabled, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SnapRight}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="80,170,0,0"></Button>
                            <Button Visibility="{Binding Path=Content.ExtrasEnabled, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SnapBottom}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="110,170,0,0"></Button>
                            <Button Visibility="{Binding Path=Content.ExtrasEnabled, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SnapWidth}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="140,170,0,0"></Button>
                            <Button Visibility="{Binding Path=Content.ExtrasEnabled, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SnapHeight}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="170,170,0,0"></Button>
                            <Button Visibility="{Binding Path=Content.ExtrasEnabled, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource Reset}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="200,170,0,0"></Button>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Name="Grid_Main">
        <Canvas Name="Canvas_Main" Margin="0,80,0,0">
        </Canvas>
        <Rectangle VerticalAlignment="Top" Height="80" Fill="LightGray" Stroke="Black"></Rectangle>
        <Button Content="New" Height="40" HorizontalAlignment="Center" Margin="0,20,600,0" Name="Button_New" Click="OnClickNew" VerticalAlignment="Top" Width="100" />
        <Button Content="Load" Height="40" HorizontalAlignment="Center" Margin="0,20,300,0" Name="Button_Loadw" Click="OnClickLoad" VerticalAlignment="Top" Width="100" />
        <Button Content="Save" Height="40" HorizontalAlignment="Center" Margin="0,20,0,0" Name="Button_Save" Click="OnClickSave" VerticalAlignment="Top" Width="100" />
        <Button Content="Save As" Height="40" HorizontalAlignment="Center" Margin="300,20,0,0" Name="Button_SaveAs" Click="OnClickSaveAs" VerticalAlignment="Top" Width="100" />
        <Button Content="Export" Height="40" HorizontalAlignment="Center" Margin="600,20,0,0" Name="Button_Export" Click="OnClickExport" VerticalAlignment="Top" Width="100" />
    </Grid>
</Window>

